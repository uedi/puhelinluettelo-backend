{"version":3,"sources":["components/Filter.js","components/Person.js","components/Persons.js","components/PersonForm.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","filter","handleFilterChange","value","onChange","Person","person","deletePerson","name","number","onClick","id","Persons","persons","map","key","PersonForm","props","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","type","Notification","message","isError","className","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","setPersons","setNewName","setNewNumber","setFilter","notification","setNotification","setIsError","useEffect","personsService","initialPersons","getNewPerson","clearNewPersonData","showNotification","msg","setTimeout","personsToShow","toLowerCase","includes","event","target","preventDefault","some","alreadyAdded","find","alert","window","confirm","personObject","returnedPerson","catch","error","console","log","updatePerson","concat","createNewPerson","p","finally","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b16322aa.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({filter, handleFilterChange}) => (\n    <div>\n        filter shown with <input value={filter} onChange={handleFilterChange}/>\n    </div>\n)\n\nexport default Filter","import React from 'react'\n\nconst Person = ({person, deletePerson}) => (\n    <li>\n        {person.name} {person.number} <button onClick={() => deletePerson(person.id)}>delete</button>\n    </li>\n)\n\nexport default Person","import React from 'react'\nimport Person from './Person'\n\nconst Persons = ({persons, deletePerson}) => (\n    <ul>\n        { persons.map(person =>\n            <Person key={person.id} person={person} deletePerson={deletePerson} />\n        )}\n    </ul>\n)\n\nexport default Persons","import React from 'react'\n\nconst PersonForm = (props) => (\n    <form onSubmit={props.addPerson}>\n        <div>\n            name: <input value={props.newName} onChange={props.handleNameChange}/>\n        </div>\n        <div>\n            number: <input value={props.newNumber} onChange={props.handleNumberChange}/>\n        </div>\n        <div>\n            <button type=\"submit\">add</button>\n        </div>\n    </form>\n)\n\nexport default PersonForm","import React from 'react'\n\nconst Notification = ({message, isError}) => {\n    if(message === null) {\n        return null\n    }\n    if(isError) {\n        return (\n            <div className=\"notification error\">\n                {message}\n            </div>    \n        )\n    }\n    return (\n        <div className=\"notification message\">\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, remove}","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport Notification from './components/Notification'\nimport personsService from './services/persons'\nimport './index.css'\n\nconst App = () => {\n    const [ persons, setPersons] = useState([])\n    const [ newName, setNewName ] = useState('')\n    const [ newNumber, setNewNumber] = useState('')\n    const [ filter, setFilter] = useState('')\n    const [ notification, setNotification ] = useState(null)\n    const [ isError, setIsError ] = useState(false)\n    \n    useEffect(() => {\n        personsService\n            .getAll()\n            .then(initialPersons => {\n                setPersons(initialPersons)\n            })\n    }, [])\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n    const handleFilterChange = (event) => {\n        setFilter(event.target.value)\n    }\n\n    const getNewPerson = () => {\n        return { name: newName, number: newNumber }\n    }\n\n    const clearNewPersonData = () => {\n        setNewName('')\n        setNewNumber('')\n    }\n\n    const showNotification = (msg) => {\n        setNotification(msg)\n        setTimeout(() => {\n            setNotification(null)\n            if(isError) {\n                setIsError(false)\n            }\n        }, 4000)\n    }\n\n    const createNewPerson = () => {\n        const personObject = getNewPerson()\n        personsService\n            .create(personObject)\n            .then(returnedPerson => {\n                setPersons(persons.concat(returnedPerson))\n                clearNewPersonData()\n                setIsError(false)\n                showNotification(`Added ${returnedPerson.name}`)\n            })\n            .catch(error => {\n                console.log('createNewPerson failed: ', error)\n                setIsError(true)\n                showNotification(error.response.data.error)\n            })\n    }\n\n    const updatePerson = (id) => {\n        const personObject = getNewPerson()\n        personsService\n            .update(id, personObject)\n            .then(returnedPerson => {\n                setPersons(persons.map(person => person.id !== id ? person : returnedPerson))\n                clearNewPersonData()\n                showNotification(`Updated ${returnedPerson.name}`)\n            })\n            .catch(error => {\n                console.log('updatePerson failed: ', error)\n                setIsError(true)\n                showNotification(`Information of ${personObject.name} has already been removed from server`)\n                setPersons(persons.filter(person => person.id !== id))\n            })\n    }\n\n    const addPerson = (event) => {\n        event.preventDefault()\n        if(persons.some(person => person.name === newName)) {\n            const alreadyAdded = persons.find(person => person.name === newName)\n            if(alreadyAdded.number === newNumber) {\n                alert(`${newName} with number ${newNumber} is already added to phonebook`)\n            } else if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n                updatePerson(alreadyAdded.id)\n            }\n        } else {\n            createNewPerson()\n        }\n    }\n\n    const deletePerson = (id) => {\n        const name = persons.find(p => p.id === id).name\n        if(window.confirm(`Detele ${name}`)) {\n            personsService.remove(id)\n                .then(response => {\n                    showNotification(`Removed ${name}`)\n                })\n                .catch(error => {\n                    console.log('deletePerson failed: ', error)\n                    setIsError(true)\n                    showNotification(`Information of ${name} was already removed from server`)\n                })\n                .finally(() => {\n                    setPersons(persons.filter(person => person.id !== id))\n                })\n        }\n        \n    }\n\n    const personsToShow = filter === '' ? persons : persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification message={notification} isError={isError}/>\n            <Filter filter={filter} handleFilterChange={handleFilterChange} />\n            <h2>Add a new</h2>\n            <PersonForm \n                addPerson={addPerson}\n                newName={newName}\n                handleNameChange={handleNameChange}\n                newNumber={newNumber}\n                handleNumberChange={handleNumberChange}\n            />\n            <h2>Numbers</h2>\n            <Persons persons={personsToShow} deletePerson={deletePerson}/>\n        </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}